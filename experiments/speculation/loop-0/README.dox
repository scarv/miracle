
# Speculation / loop 0

## Purpose

- To see if after the "branch backwards" instruction of a loop
  body is executed, and program-order instructions following it
  are also partially executed but thrown away.

## Method

- Create a simple loop body which just increments the loop counter.

- After final "branch backwards" instruction, add a single xor instruction
  which "clears" a register containing a secret value: `xor r0,r0,r0`

- Execute the loop `N` times before clearing the secret variable at the end.

## Expectation

- If the xor instrutiton only enters data-dependent parts of the pipeline
  when executed, then we should only see hamming weight leakage in one
  place in the trace.

- If the xor instruction partially executes every loop iteration, then
  we will see hamming weight leakage each time the loop re-runs.

## Running the experiment

To run all stages of the experiment for a particular target device:

```
make -B USB_PORT=[PORT] UAS_TARGET=[TARGET] flow-speculation-loop-0
```

Where:
- `[PORT]` Is the UART/Serial port to communicate with it over.
- `[TARGET]` Is one of the target names listed in @ref targets

This will run all of the build, program, capture and analyse steps for
the experiment on the specified target.

The individual steps of the experiment are run with the following commands:

- Build: `make build_[TARGET]_speculation-loop-0`
- Program: `make program_[TARGET]_speculation-loop-0`
- Capture: `make capture_[TARGET]_speculation-loop-0 USB_PORT=[PORT]`
- Analyse: `make analyse_[TARGET]_speculation-loop-0`

*/
